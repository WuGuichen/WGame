//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace BaseData.weapon
{ 

public sealed partial class Weapon :  Bright.Config.BeanBase 
{
    public Weapon(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  Desc = _json["desc"]; }
        { if(!_json["objectId"].IsNumber) { throw new SerializationException(); }  ObjectId = _json["objectId"]; }
        { if(!_json["dropId"].IsNumber) { throw new SerializationException(); }  DropId = _json["dropId"]; }
        { if(!_json["localMotion"].IsNumber) { throw new SerializationException(); }  LocalMotion = _json["localMotion"]; }
        { if(!_json["attack1"].IsNumber) { throw new SerializationException(); }  Attack1 = _json["attack1"]; }
        { if(!_json["attack2"].IsNumber) { throw new SerializationException(); }  Attack2 = _json["attack2"]; }
        { if(!_json["attack3"].IsNumber) { throw new SerializationException(); }  Attack3 = _json["attack3"]; }
        { if(!_json["block1"].IsNumber) { throw new SerializationException(); }  Block1 = _json["block1"]; }
        { if(!_json["deadR1"].IsNumber) { throw new SerializationException(); }  DeadR1 = _json["deadR1"]; }
        { if(!_json["hitFwd1"].IsNumber) { throw new SerializationException(); }  HitFwd1 = _json["hitFwd1"]; }
        { if(!_json["hitBwd1"].IsNumber) { throw new SerializationException(); }  HitBwd1 = _json["hitBwd1"]; }
        { if(!_json["jump1"].IsNumber) { throw new SerializationException(); }  Jump1 = _json["jump1"]; }
        { if(!_json["jumpLand1"].IsNumber) { throw new SerializationException(); }  JumpLand1 = _json["jumpLand1"]; }
        { if(!_json["Spare1"].IsNumber) { throw new SerializationException(); }  Spare1 = _json["Spare1"]; }
        { if(!_json["Step1"].IsNumber) { throw new SerializationException(); }  Step1 = _json["Step1"]; }
        { if(!_json["animGroupId"].IsNumber) { throw new SerializationException(); }  AnimGroupId = _json["animGroupId"]; }
        PostInit();
    }

    public Weapon(int id, string name, string desc, int objectId, int dropId, int localMotion, int attack1, int attack2, int attack3, int block1, int deadR1, int hitFwd1, int hitBwd1, int jump1, int jumpLand1, int Spare1, int Step1, int animGroupId ) 
    {
        this.Id = id;
        this.Name = name;
        this.Desc = desc;
        this.ObjectId = objectId;
        this.DropId = dropId;
        this.LocalMotion = localMotion;
        this.Attack1 = attack1;
        this.Attack2 = attack2;
        this.Attack3 = attack3;
        this.Block1 = block1;
        this.DeadR1 = deadR1;
        this.HitFwd1 = hitFwd1;
        this.HitBwd1 = hitBwd1;
        this.Jump1 = jump1;
        this.JumpLand1 = jumpLand1;
        this.Spare1 = Spare1;
        this.Step1 = Step1;
        this.AnimGroupId = animGroupId;
        PostInit();
    }

    public static Weapon DeserializeWeapon(JSONNode _json)
    {
        return new weapon.Weapon(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 物品id
    /// </summary>
    public int ObjectId { get; private set; }
    /// <summary>
    /// 未拾取id
    /// </summary>
    public int DropId { get; private set; }
    public int LocalMotion { get; private set; }
    public int Attack1 { get; private set; }
    public int Attack2 { get; private set; }
    public int Attack3 { get; private set; }
    public int Block1 { get; private set; }
    public int DeadR1 { get; private set; }
    public int HitFwd1 { get; private set; }
    public int HitBwd1 { get; private set; }
    public int Jump1 { get; private set; }
    public int JumpLand1 { get; private set; }
    public int Spare1 { get; private set; }
    public int Step1 { get; private set; }
    /// <summary>
    /// 基础动画组
    /// </summary>
    public int AnimGroupId { get; private set; }

    public const int __ID__ = 986069582;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "ObjectId:" + ObjectId + ","
        + "DropId:" + DropId + ","
        + "LocalMotion:" + LocalMotion + ","
        + "Attack1:" + Attack1 + ","
        + "Attack2:" + Attack2 + ","
        + "Attack3:" + Attack3 + ","
        + "Block1:" + Block1 + ","
        + "DeadR1:" + DeadR1 + ","
        + "HitFwd1:" + HitFwd1 + ","
        + "HitBwd1:" + HitBwd1 + ","
        + "Jump1:" + Jump1 + ","
        + "JumpLand1:" + JumpLand1 + ","
        + "Spare1:" + Spare1 + ","
        + "Step1:" + Step1 + ","
        + "AnimGroupId:" + AnimGroupId + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
