//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/UnityProjects/WGame/Client/Assets/Scripts/WLang/Runtime/WLang.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="WLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IWLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFile([NotNull] WLangParser.FileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.fsmBuilder"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFsmBuilder([NotNull] WLangParser.FsmBuilderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.fileCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFileCode([NotNull] WLangParser.FileCodeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FSMState</c>
	/// labeled alternative in <see cref="WLangParser.fsmBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFSMState([NotNull] WLangParser.FSMStateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FSMTrigger</c>
	/// labeled alternative in <see cref="WLangParser.fsmBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFSMTrigger([NotNull] WLangParser.FSMTriggerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FSMCondition</c>
	/// labeled alternative in <see cref="WLangParser.fsmBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFSMCondition([NotNull] WLangParser.FSMConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FSMTriggerTime</c>
	/// labeled alternative in <see cref="WLangParser.fsmBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFSMTriggerTime([NotNull] WLangParser.FSMTriggerTimeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FSMStart</c>
	/// labeled alternative in <see cref="WLangParser.fsmBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFSMStart([NotNull] WLangParser.FSMStartContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FSMExit</c>
	/// labeled alternative in <see cref="WLangParser.fsmBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFSMExit([NotNull] WLangParser.FSMExitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.fsmContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFsmContent([NotNull] WLangParser.FsmContentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.parametersMethodRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametersMethodRef([NotNull] WLangParser.ParametersMethodRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.fsmTransition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFsmTransition([NotNull] WLangParser.FsmTransitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.fsmTrigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFsmTrigger([NotNull] WLangParser.FsmTriggerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.fsmCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFsmCondition([NotNull] WLangParser.FsmConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.fsmTriggerTime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFsmTriggerTime([NotNull] WLangParser.FsmTriggerTimeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.bTreeBuilder"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBTreeBuilder([NotNull] WLangParser.BTreeBuilderContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TreeSelector</c>
	/// labeled alternative in <see cref="WLangParser.treeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTreeSelector([NotNull] WLangParser.TreeSelectorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TreeSequence</c>
	/// labeled alternative in <see cref="WLangParser.treeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTreeSequence([NotNull] WLangParser.TreeSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TreeDo</c>
	/// labeled alternative in <see cref="WLangParser.treeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTreeDo([NotNull] WLangParser.TreeDoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TreeWaitTime</c>
	/// labeled alternative in <see cref="WLangParser.treeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTreeWaitTime([NotNull] WLangParser.TreeWaitTimeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TreeWait</c>
	/// labeled alternative in <see cref="WLangParser.treeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTreeWait([NotNull] WLangParser.TreeWaitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.treeContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTreeContent([NotNull] WLangParser.TreeContentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.numParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumParam([NotNull] WLangParser.NumParamContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] WLangParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.parametersDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametersDef([NotNull] WLangParser.ParametersDefContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprCommand</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprCommand([NotNull] WLangParser.ExprCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprPrimary</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprPrimary([NotNull] WLangParser.ExprPrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprBinary</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprBinary([NotNull] WLangParser.ExprBinaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprGroup</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprGroup([NotNull] WLangParser.ExprGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprPoint</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprPoint([NotNull] WLangParser.ExprPointContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprTable</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprTable([NotNull] WLangParser.ExprTableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprUnary</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprUnary([NotNull] WLangParser.ExprUnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprLambdaRef</c>
	/// labeled alternative in <see cref="WLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLambdaRef([NotNull] WLangParser.ExprLambdaRefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.exprLambda"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLambda([NotNull] WLangParser.ExprLambdaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.exprMethod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprMethod([NotNull] WLangParser.ExprMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.exprID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprID([NotNull] WLangParser.ExprIDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprMethodRefID</c>
	/// labeled alternative in <see cref="WLangParser.exprMethodRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprMethodRefID([NotNull] WLangParser.ExprMethodRefIDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprMethodRefNull</c>
	/// labeled alternative in <see cref="WLangParser.exprMethodRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprMethodRefNull([NotNull] WLangParser.ExprMethodRefNullContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprMethodRefLambda</c>
	/// labeled alternative in <see cref="WLangParser.exprMethodRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprMethodRefLambda([NotNull] WLangParser.ExprMethodRefLambdaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprList([NotNull] WLangParser.ExprListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprIntID</c>
	/// labeled alternative in <see cref="WLangParser.exprInt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprIntID([NotNull] WLangParser.ExprIntIDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprIntINT</c>
	/// labeled alternative in <see cref="WLangParser.exprInt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprIntINT([NotNull] WLangParser.ExprIntINTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimaryID</c>
	/// labeled alternative in <see cref="WLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryID([NotNull] WLangParser.PrimaryIDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimaryINT</c>
	/// labeled alternative in <see cref="WLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryINT([NotNull] WLangParser.PrimaryINTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimaryFLOAT</c>
	/// labeled alternative in <see cref="WLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryFLOAT([NotNull] WLangParser.PrimaryFLOATContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimaryCHAR</c>
	/// labeled alternative in <see cref="WLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryCHAR([NotNull] WLangParser.PrimaryCHARContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimarySTRING</c>
	/// labeled alternative in <see cref="WLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimarySTRING([NotNull] WLangParser.PrimarySTRINGContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimaryBOOL</c>
	/// labeled alternative in <see cref="WLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryBOOL([NotNull] WLangParser.PrimaryBOOLContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimaryNULL</c>
	/// labeled alternative in <see cref="WLangParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryNULL([NotNull] WLangParser.PrimaryNULLContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StatAssign</c>
	/// labeled alternative in <see cref="WLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatAssign([NotNull] WLangParser.StatAssignContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StatPass</c>
	/// labeled alternative in <see cref="WLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatPass([NotNull] WLangParser.StatPassContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StatReturn</c>
	/// labeled alternative in <see cref="WLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatReturn([NotNull] WLangParser.StatReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StatImport</c>
	/// labeled alternative in <see cref="WLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatImport([NotNull] WLangParser.StatImportContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StatMethod</c>
	/// labeled alternative in <see cref="WLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatMethod([NotNull] WLangParser.StatMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StatCommand</c>
	/// labeled alternative in <see cref="WLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatCommand([NotNull] WLangParser.StatCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.waitStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWaitStatement([NotNull] WLangParser.WaitStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] WLangParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.ifStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStat([NotNull] WLangParser.IfStatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.elseIfStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIfStat([NotNull] WLangParser.ElseIfStatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.elseStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseStat([NotNull] WLangParser.ElseStatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] WLangParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] WLangParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] WLangParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="WLangParser.point"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPoint([NotNull] WLangParser.PointContext context);
}
