//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SensorEntity {

    public SensorCharacterServiceComponent sensorCharacterService { get { return (SensorCharacterServiceComponent)GetComponent(SensorComponentsLookup.SensorCharacterService); } }
    public bool hasSensorCharacterService { get { return HasComponent(SensorComponentsLookup.SensorCharacterService); } }

    public void AddSensorCharacterService(ISensorService newService) {
        var index = SensorComponentsLookup.SensorCharacterService;
        var component = (SensorCharacterServiceComponent)CreateComponent(index, typeof(SensorCharacterServiceComponent));
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceSensorCharacterService(ISensorService newService) {
        var index = SensorComponentsLookup.SensorCharacterService;
        var component = (SensorCharacterServiceComponent)CreateComponent(index, typeof(SensorCharacterServiceComponent));
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveSensorCharacterService() {
        RemoveComponent(SensorComponentsLookup.SensorCharacterService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class SensorMatcher {

    static Entitas.IMatcher<SensorEntity> _matcherSensorCharacterService;

    public static Entitas.IMatcher<SensorEntity> SensorCharacterService {
        get {
            if (_matcherSensorCharacterService == null) {
                var matcher = (Entitas.Matcher<SensorEntity>)Entitas.Matcher<SensorEntity>.AllOf(SensorComponentsLookup.SensorCharacterService);
                matcher.componentNames = SensorComponentsLookup.componentNames;
                _matcherSensorCharacterService = matcher;
            }

            return _matcherSensorCharacterService;
        }
    }
}
