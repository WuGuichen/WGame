//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SensorEntity {

    public DetectCharDegreeInit detectCharDegreeInit { get { return (DetectCharDegreeInit)GetComponent(SensorComponentsLookup.DetectCharDegreeInit); } }
    public bool hasDetectCharDegreeInit { get { return HasComponent(SensorComponentsLookup.DetectCharDegreeInit); } }

    public void AddDetectCharDegreeInit(float newWarning, float newSpotted) {
        var index = SensorComponentsLookup.DetectCharDegreeInit;
        var component = (DetectCharDegreeInit)CreateComponent(index, typeof(DetectCharDegreeInit));
        component.warning = newWarning;
        component.spotted = newSpotted;
        AddComponent(index, component);
    }

    public void ReplaceDetectCharDegreeInit(float newWarning, float newSpotted) {
        var index = SensorComponentsLookup.DetectCharDegreeInit;
        var component = (DetectCharDegreeInit)CreateComponent(index, typeof(DetectCharDegreeInit));
        component.warning = newWarning;
        component.spotted = newSpotted;
        ReplaceComponent(index, component);
    }

    public void RemoveDetectCharDegreeInit() {
        RemoveComponent(SensorComponentsLookup.DetectCharDegreeInit);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class SensorMatcher {

    static Entitas.IMatcher<SensorEntity> _matcherDetectCharDegreeInit;

    public static Entitas.IMatcher<SensorEntity> DetectCharDegreeInit {
        get {
            if (_matcherDetectCharDegreeInit == null) {
                var matcher = (Entitas.Matcher<SensorEntity>)Entitas.Matcher<SensorEntity>.AllOf(SensorComponentsLookup.DetectCharDegreeInit);
                matcher.componentNames = SensorComponentsLookup.componentNames;
                _matcherDetectCharDegreeInit = matcher;
            }

            return _matcherDetectCharDegreeInit;
        }
    }
}
