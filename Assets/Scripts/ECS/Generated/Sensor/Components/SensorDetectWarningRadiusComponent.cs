//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SensorEntity {

    public DetectWarningRadiusComponent detectWarningRadius { get { return (DetectWarningRadiusComponent)GetComponent(SensorComponentsLookup.DetectWarningRadius); } }
    public bool hasDetectWarningRadius { get { return HasComponent(SensorComponentsLookup.DetectWarningRadius); } }

    public void AddDetectWarningRadius(float newValue) {
        var index = SensorComponentsLookup.DetectWarningRadius;
        var component = (DetectWarningRadiusComponent)CreateComponent(index, typeof(DetectWarningRadiusComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDetectWarningRadius(float newValue) {
        var index = SensorComponentsLookup.DetectWarningRadius;
        var component = (DetectWarningRadiusComponent)CreateComponent(index, typeof(DetectWarningRadiusComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDetectWarningRadius() {
        RemoveComponent(SensorComponentsLookup.DetectWarningRadius);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class SensorMatcher {

    static Entitas.IMatcher<SensorEntity> _matcherDetectWarningRadius;

    public static Entitas.IMatcher<SensorEntity> DetectWarningRadius {
        get {
            if (_matcherDetectWarningRadius == null) {
                var matcher = (Entitas.Matcher<SensorEntity>)Entitas.Matcher<SensorEntity>.AllOf(SensorComponentsLookup.DetectWarningRadius);
                matcher.componentNames = SensorComponentsLookup.componentNames;
                _matcherDetectWarningRadius = matcher;
            }

            return _matcherDetectWarningRadius;
        }
    }
}
