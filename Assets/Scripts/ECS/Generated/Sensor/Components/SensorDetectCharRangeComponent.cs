//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SensorEntity {

    public DetectCharRange detectCharRange { get { return (DetectCharRange)GetComponent(SensorComponentsLookup.DetectCharRange); } }
    public bool hasDetectCharRange { get { return HasComponent(SensorComponentsLookup.DetectCharRange); } }

    public void AddDetectCharRange(float newWarning, float newSpotted) {
        var index = SensorComponentsLookup.DetectCharRange;
        var component = (DetectCharRange)CreateComponent(index, typeof(DetectCharRange));
        component.warning = newWarning;
        component.spotted = newSpotted;
        AddComponent(index, component);
    }

    public void ReplaceDetectCharRange(float newWarning, float newSpotted) {
        var index = SensorComponentsLookup.DetectCharRange;
        var component = (DetectCharRange)CreateComponent(index, typeof(DetectCharRange));
        component.warning = newWarning;
        component.spotted = newSpotted;
        ReplaceComponent(index, component);
    }

    public void RemoveDetectCharRange() {
        RemoveComponent(SensorComponentsLookup.DetectCharRange);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class SensorMatcher {

    static Entitas.IMatcher<SensorEntity> _matcherDetectCharRange;

    public static Entitas.IMatcher<SensorEntity> DetectCharRange {
        get {
            if (_matcherDetectCharRange == null) {
                var matcher = (Entitas.Matcher<SensorEntity>)Entitas.Matcher<SensorEntity>.AllOf(SensorComponentsLookup.DetectCharRange);
                matcher.componentNames = SensorComponentsLookup.componentNames;
                _matcherDetectCharRange = matcher;
            }

            return _matcherDetectCharRange;
        }
    }
}
