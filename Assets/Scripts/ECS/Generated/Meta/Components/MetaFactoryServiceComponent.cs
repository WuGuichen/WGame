//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity factoryServiceEntity { get { return GetGroup(MetaMatcher.FactoryService).GetSingleEntity(); } }
    public FactoryServiceComponent factoryService { get { return factoryServiceEntity.factoryService; } }
    public bool hasFactoryService { get { return factoryServiceEntity != null; } }

    public MetaEntity SetFactoryService(IFactoryService newInstance) {
        if (hasFactoryService) {
            throw new Entitas.EntitasException("Could not set FactoryService!\n" + this + " already has an entity with FactoryServiceComponent!",
                "You should check if the context already has a factoryServiceEntity before setting it or use context.ReplaceFactoryService().");
        }
        var entity = CreateEntity();
        entity.AddFactoryService(newInstance);
        return entity;
    }

    public void ReplaceFactoryService(IFactoryService newInstance) {
        var entity = factoryServiceEntity;
        if (entity == null) {
            entity = SetFactoryService(newInstance);
        } else {
            entity.ReplaceFactoryService(newInstance);
        }
    }

    public void RemoveFactoryService() {
        factoryServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public FactoryServiceComponent factoryService { get { return (FactoryServiceComponent)GetComponent(MetaComponentsLookup.FactoryService); } }
    public bool hasFactoryService { get { return HasComponent(MetaComponentsLookup.FactoryService); } }

    public void AddFactoryService(IFactoryService newInstance) {
        var index = MetaComponentsLookup.FactoryService;
        var component = (FactoryServiceComponent)CreateComponent(index, typeof(FactoryServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceFactoryService(IFactoryService newInstance) {
        var index = MetaComponentsLookup.FactoryService;
        var component = (FactoryServiceComponent)CreateComponent(index, typeof(FactoryServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveFactoryService() {
        RemoveComponent(MetaComponentsLookup.FactoryService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherFactoryService;

    public static Entitas.IMatcher<MetaEntity> FactoryService {
        get {
            if (_matcherFactoryService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.FactoryService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherFactoryService = matcher;
            }

            return _matcherFactoryService;
        }
    }
}
