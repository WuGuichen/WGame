//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity assetsServiceEntity { get { return GetGroup(MetaMatcher.AssetsService).GetSingleEntity(); } }
    public AssetsServiceComponent assetsService { get { return assetsServiceEntity.assetsService; } }
    public bool hasAssetsService { get { return assetsServiceEntity != null; } }

    public MetaEntity SetAssetsService(WGame.Res.IAssetService newService) {
        if (hasAssetsService) {
            throw new Entitas.EntitasException("Could not set AssetsService!\n" + this + " already has an entity with AssetsServiceComponent!",
                "You should check if the context already has a assetsServiceEntity before setting it or use context.ReplaceAssetsService().");
        }
        var entity = CreateEntity();
        entity.AddAssetsService(newService);
        return entity;
    }

    public void ReplaceAssetsService(WGame.Res.IAssetService newService) {
        var entity = assetsServiceEntity;
        if (entity == null) {
            entity = SetAssetsService(newService);
        } else {
            entity.ReplaceAssetsService(newService);
        }
    }

    public void RemoveAssetsService() {
        assetsServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public AssetsServiceComponent assetsService { get { return (AssetsServiceComponent)GetComponent(MetaComponentsLookup.AssetsService); } }
    public bool hasAssetsService { get { return HasComponent(MetaComponentsLookup.AssetsService); } }

    public void AddAssetsService(WGame.Res.IAssetService newService) {
        var index = MetaComponentsLookup.AssetsService;
        var component = (AssetsServiceComponent)CreateComponent(index, typeof(AssetsServiceComponent));
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceAssetsService(WGame.Res.IAssetService newService) {
        var index = MetaComponentsLookup.AssetsService;
        var component = (AssetsServiceComponent)CreateComponent(index, typeof(AssetsServiceComponent));
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveAssetsService() {
        RemoveComponent(MetaComponentsLookup.AssetsService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherAssetsService;

    public static Entitas.IMatcher<MetaEntity> AssetsService {
        get {
            if (_matcherAssetsService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.AssetsService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherAssetsService = matcher;
            }

            return _matcherAssetsService;
        }
    }
}
