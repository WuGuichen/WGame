//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity mainCameraServiceEntity { get { return GetGroup(MetaMatcher.MainCameraService).GetSingleEntity(); } }
    public MainCameraServiceComponent mainCameraService { get { return mainCameraServiceEntity.mainCameraService; } }
    public bool hasMainCameraService { get { return mainCameraServiceEntity != null; } }

    public MetaEntity SetMainCameraService(ICameraService newService) {
        if (hasMainCameraService) {
            throw new Entitas.EntitasException("Could not set MainCameraService!\n" + this + " already has an entity with MainCameraServiceComponent!",
                "You should check if the context already has a mainCameraServiceEntity before setting it or use context.ReplaceMainCameraService().");
        }
        var entity = CreateEntity();
        entity.AddMainCameraService(newService);
        return entity;
    }

    public void ReplaceMainCameraService(ICameraService newService) {
        var entity = mainCameraServiceEntity;
        if (entity == null) {
            entity = SetMainCameraService(newService);
        } else {
            entity.ReplaceMainCameraService(newService);
        }
    }

    public void RemoveMainCameraService() {
        mainCameraServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public MainCameraServiceComponent mainCameraService { get { return (MainCameraServiceComponent)GetComponent(MetaComponentsLookup.MainCameraService); } }
    public bool hasMainCameraService { get { return HasComponent(MetaComponentsLookup.MainCameraService); } }

    public void AddMainCameraService(ICameraService newService) {
        var index = MetaComponentsLookup.MainCameraService;
        var component = (MainCameraServiceComponent)CreateComponent(index, typeof(MainCameraServiceComponent));
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceMainCameraService(ICameraService newService) {
        var index = MetaComponentsLookup.MainCameraService;
        var component = (MainCameraServiceComponent)CreateComponent(index, typeof(MainCameraServiceComponent));
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveMainCameraService() {
        RemoveComponent(MetaComponentsLookup.MainCameraService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherMainCameraService;

    public static Entitas.IMatcher<MetaEntity> MainCameraService {
        get {
            if (_matcherMainCameraService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.MainCameraService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherMainCameraService = matcher;
            }

            return _matcherMainCameraService;
        }
    }
}
