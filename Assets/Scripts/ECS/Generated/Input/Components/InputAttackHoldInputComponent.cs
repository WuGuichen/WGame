//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity attackHoldInputEntity { get { return GetGroup(InputMatcher.AttackHoldInput).GetSingleEntity(); } }
    public AttackHoldInputComponent attackHoldInput { get { return attackHoldInputEntity.attackHoldInput; } }
    public bool hasAttackHoldInput { get { return attackHoldInputEntity != null; } }

    public InputEntity SetAttackHoldInput(bool newValue) {
        if (hasAttackHoldInput) {
            throw new Entitas.EntitasException("Could not set AttackHoldInput!\n" + this + " already has an entity with AttackHoldInputComponent!",
                "You should check if the context already has a attackHoldInputEntity before setting it or use context.ReplaceAttackHoldInput().");
        }
        var entity = CreateEntity();
        entity.AddAttackHoldInput(newValue);
        return entity;
    }

    public void ReplaceAttackHoldInput(bool newValue) {
        var entity = attackHoldInputEntity;
        if (entity == null) {
            entity = SetAttackHoldInput(newValue);
        } else {
            entity.ReplaceAttackHoldInput(newValue);
        }
    }

    public void RemoveAttackHoldInput() {
        attackHoldInputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public AttackHoldInputComponent attackHoldInput { get { return (AttackHoldInputComponent)GetComponent(InputComponentsLookup.AttackHoldInput); } }
    public bool hasAttackHoldInput { get { return HasComponent(InputComponentsLookup.AttackHoldInput); } }

    public void AddAttackHoldInput(bool newValue) {
        var index = InputComponentsLookup.AttackHoldInput;
        var component = (AttackHoldInputComponent)CreateComponent(index, typeof(AttackHoldInputComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttackHoldInput(bool newValue) {
        var index = InputComponentsLookup.AttackHoldInput;
        var component = (AttackHoldInputComponent)CreateComponent(index, typeof(AttackHoldInputComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackHoldInput() {
        RemoveComponent(InputComponentsLookup.AttackHoldInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherAttackHoldInput;

    public static Entitas.IMatcher<InputEntity> AttackHoldInput {
        get {
            if (_matcherAttackHoldInput == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.AttackHoldInput);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherAttackHoldInput = matcher;
            }

            return _matcherAttackHoldInput;
        }
    }
}
