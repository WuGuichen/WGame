//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity attackInputEntity { get { return GetGroup(InputMatcher.AttackInput).GetSingleEntity(); } }
    public AttackInputComponent attackInput { get { return attackInputEntity.attackInput; } }
    public bool hasAttackInput { get { return attackInputEntity != null; } }

    public InputEntity SetAttackInput(bool newValue) {
        if (hasAttackInput) {
            throw new Entitas.EntitasException("Could not set AttackInput!\n" + this + " already has an entity with AttackInputComponent!",
                "You should check if the context already has a attackInputEntity before setting it or use context.ReplaceAttackInput().");
        }
        var entity = CreateEntity();
        entity.AddAttackInput(newValue);
        return entity;
    }

    public void ReplaceAttackInput(bool newValue) {
        var entity = attackInputEntity;
        if (entity == null) {
            entity = SetAttackInput(newValue);
        } else {
            entity.ReplaceAttackInput(newValue);
        }
    }

    public void RemoveAttackInput() {
        attackInputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public AttackInputComponent attackInput { get { return (AttackInputComponent)GetComponent(InputComponentsLookup.AttackInput); } }
    public bool hasAttackInput { get { return HasComponent(InputComponentsLookup.AttackInput); } }

    public void AddAttackInput(bool newValue) {
        var index = InputComponentsLookup.AttackInput;
        var component = (AttackInputComponent)CreateComponent(index, typeof(AttackInputComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttackInput(bool newValue) {
        var index = InputComponentsLookup.AttackInput;
        var component = (AttackInputComponent)CreateComponent(index, typeof(AttackInputComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackInput() {
        RemoveComponent(InputComponentsLookup.AttackInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherAttackInput;

    public static Entitas.IMatcher<InputEntity> AttackInput {
        get {
            if (_matcherAttackInput == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.AttackInput);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherAttackInput = matcher;
            }

            return _matcherAttackInput;
        }
    }
}
