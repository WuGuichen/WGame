//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity focusInputEntity { get { return GetGroup(InputMatcher.FocusInput).GetSingleEntity(); } }
    public FocusInputComponent focusInput { get { return focusInputEntity.focusInput; } }
    public bool hasFocusInput { get { return focusInputEntity != null; } }

    public InputEntity SetFocusInput(bool newValue) {
        if (hasFocusInput) {
            throw new Entitas.EntitasException("Could not set FocusInput!\n" + this + " already has an entity with FocusInputComponent!",
                "You should check if the context already has a focusInputEntity before setting it or use context.ReplaceFocusInput().");
        }
        var entity = CreateEntity();
        entity.AddFocusInput(newValue);
        return entity;
    }

    public void ReplaceFocusInput(bool newValue) {
        var entity = focusInputEntity;
        if (entity == null) {
            entity = SetFocusInput(newValue);
        } else {
            entity.ReplaceFocusInput(newValue);
        }
    }

    public void RemoveFocusInput() {
        focusInputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public FocusInputComponent focusInput { get { return (FocusInputComponent)GetComponent(InputComponentsLookup.FocusInput); } }
    public bool hasFocusInput { get { return HasComponent(InputComponentsLookup.FocusInput); } }

    public void AddFocusInput(bool newValue) {
        var index = InputComponentsLookup.FocusInput;
        var component = (FocusInputComponent)CreateComponent(index, typeof(FocusInputComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFocusInput(bool newValue) {
        var index = InputComponentsLookup.FocusInput;
        var component = (FocusInputComponent)CreateComponent(index, typeof(FocusInputComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFocusInput() {
        RemoveComponent(InputComponentsLookup.FocusInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherFocusInput;

    public static Entitas.IMatcher<InputEntity> FocusInput {
        get {
            if (_matcherFocusInput == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.FocusInput);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherFocusInput = matcher;
            }

            return _matcherFocusInput;
        }
    }
}
