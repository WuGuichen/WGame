//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity defenseEntity { get { return GetGroup(InputMatcher.Defense).GetSingleEntity(); } }
    public DefenseComponent defense { get { return defenseEntity.defense; } }
    public bool hasDefense { get { return defenseEntity != null; } }

    public InputEntity SetDefense(bool newValue) {
        if (hasDefense) {
            throw new Entitas.EntitasException("Could not set Defense!\n" + this + " already has an entity with DefenseComponent!",
                "You should check if the context already has a defenseEntity before setting it or use context.ReplaceDefense().");
        }
        var entity = CreateEntity();
        entity.AddDefense(newValue);
        return entity;
    }

    public void ReplaceDefense(bool newValue) {
        var entity = defenseEntity;
        if (entity == null) {
            entity = SetDefense(newValue);
        } else {
            entity.ReplaceDefense(newValue);
        }
    }

    public void RemoveDefense() {
        defenseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public DefenseComponent defense { get { return (DefenseComponent)GetComponent(InputComponentsLookup.Defense); } }
    public bool hasDefense { get { return HasComponent(InputComponentsLookup.Defense); } }

    public void AddDefense(bool newValue) {
        var index = InputComponentsLookup.Defense;
        var component = (DefenseComponent)CreateComponent(index, typeof(DefenseComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDefense(bool newValue) {
        var index = InputComponentsLookup.Defense;
        var component = (DefenseComponent)CreateComponent(index, typeof(DefenseComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDefense() {
        RemoveComponent(InputComponentsLookup.Defense);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherDefense;

    public static Entitas.IMatcher<InputEntity> Defense {
        get {
            if (_matcherDefense == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.Defense);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherDefense = matcher;
            }

            return _matcherDefense;
        }
    }
}
