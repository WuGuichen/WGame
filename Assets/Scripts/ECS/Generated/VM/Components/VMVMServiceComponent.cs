//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class VMEntity {

    public VMServiceComponent vMService { get { return (VMServiceComponent)GetComponent(VMComponentsLookup.VMService); } }
    public bool hasVMService { get { return HasComponent(VMComponentsLookup.VMService); } }

    public void AddVMService(IVMService newService) {
        var index = VMComponentsLookup.VMService;
        var component = (VMServiceComponent)CreateComponent(index, typeof(VMServiceComponent));
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceVMService(IVMService newService) {
        var index = VMComponentsLookup.VMService;
        var component = (VMServiceComponent)CreateComponent(index, typeof(VMServiceComponent));
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveVMService() {
        RemoveComponent(VMComponentsLookup.VMService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class VMMatcher {

    static Entitas.IMatcher<VMEntity> _matcherVMService;

    public static Entitas.IMatcher<VMEntity> VMService {
        get {
            if (_matcherVMService == null) {
                var matcher = (Entitas.Matcher<VMEntity>)Entitas.Matcher<VMEntity>.AllOf(VMComponentsLookup.VMService);
                matcher.componentNames = VMComponentsLookup.componentNames;
                _matcherVMService = matcher;
            }

            return _matcherVMService;
        }
    }
}
