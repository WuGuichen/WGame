//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class WeaponEntity {

    public Weapon.HitTargetsComponent weaponHitTargets { get { return (Weapon.HitTargetsComponent)GetComponent(WeaponComponentsLookup.WeaponHitTargets); } }
    public bool hasWeaponHitTargets { get { return HasComponent(WeaponComponentsLookup.WeaponHitTargets); } }

    public void AddWeaponHitTargets(GameEntity[] newTargets) {
        var index = WeaponComponentsLookup.WeaponHitTargets;
        var component = (Weapon.HitTargetsComponent)CreateComponent(index, typeof(Weapon.HitTargetsComponent));
        component.targets = newTargets;
        AddComponent(index, component);
    }

    public void ReplaceWeaponHitTargets(GameEntity[] newTargets) {
        var index = WeaponComponentsLookup.WeaponHitTargets;
        var component = (Weapon.HitTargetsComponent)CreateComponent(index, typeof(Weapon.HitTargetsComponent));
        component.targets = newTargets;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponHitTargets() {
        RemoveComponent(WeaponComponentsLookup.WeaponHitTargets);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class WeaponMatcher {

    static Entitas.IMatcher<WeaponEntity> _matcherWeaponHitTargets;

    public static Entitas.IMatcher<WeaponEntity> WeaponHitTargets {
        get {
            if (_matcherWeaponHitTargets == null) {
                var matcher = (Entitas.Matcher<WeaponEntity>)Entitas.Matcher<WeaponEntity>.AllOf(WeaponComponentsLookup.WeaponHitTargets);
                matcher.componentNames = WeaponComponentsLookup.componentNames;
                _matcherWeaponHitTargets = matcher;
            }

            return _matcherWeaponHitTargets;
        }
    }
}
