//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class WeaponEntity {

    public Weapon.WeaponViewComponent weaponWeaponView { get { return (Weapon.WeaponViewComponent)GetComponent(WeaponComponentsLookup.WeaponWeaponView); } }
    public bool hasWeaponWeaponView { get { return HasComponent(WeaponComponentsLookup.WeaponWeaponView); } }

    public void AddWeaponWeaponView(Weapon.IWeaponViewService newService) {
        var index = WeaponComponentsLookup.WeaponWeaponView;
        var component = (Weapon.WeaponViewComponent)CreateComponent(index, typeof(Weapon.WeaponViewComponent));
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceWeaponWeaponView(Weapon.IWeaponViewService newService) {
        var index = WeaponComponentsLookup.WeaponWeaponView;
        var component = (Weapon.WeaponViewComponent)CreateComponent(index, typeof(Weapon.WeaponViewComponent));
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponWeaponView() {
        RemoveComponent(WeaponComponentsLookup.WeaponWeaponView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class WeaponMatcher {

    static Entitas.IMatcher<WeaponEntity> _matcherWeaponWeaponView;

    public static Entitas.IMatcher<WeaponEntity> WeaponWeaponView {
        get {
            if (_matcherWeaponWeaponView == null) {
                var matcher = (Entitas.Matcher<WeaponEntity>)Entitas.Matcher<WeaponEntity>.AllOf(WeaponComponentsLookup.WeaponWeaponView);
                matcher.componentNames = WeaponComponentsLookup.componentNames;
                _matcherWeaponWeaponView = matcher;
            }

            return _matcherWeaponWeaponView;
        }
    }
}
