//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MotionEntity {

    public DoMoveTypeComponent doMoveType { get { return (DoMoveTypeComponent)GetComponent(MotionComponentsLookup.DoMoveType); } }
    public bool hasDoMoveType { get { return HasComponent(MotionComponentsLookup.DoMoveType); } }

    public void AddDoMoveType(DoMoveType newType) {
        var index = MotionComponentsLookup.DoMoveType;
        var component = (DoMoveTypeComponent)CreateComponent(index, typeof(DoMoveTypeComponent));
        component.type = newType;
        AddComponent(index, component);
    }

    public void ReplaceDoMoveType(DoMoveType newType) {
        var index = MotionComponentsLookup.DoMoveType;
        var component = (DoMoveTypeComponent)CreateComponent(index, typeof(DoMoveTypeComponent));
        component.type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveDoMoveType() {
        RemoveComponent(MotionComponentsLookup.DoMoveType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MotionMatcher {

    static Entitas.IMatcher<MotionEntity> _matcherDoMoveType;

    public static Entitas.IMatcher<MotionEntity> DoMoveType {
        get {
            if (_matcherDoMoveType == null) {
                var matcher = (Entitas.Matcher<MotionEntity>)Entitas.Matcher<MotionEntity>.AllOf(MotionComponentsLookup.DoMoveType);
                matcher.componentNames = MotionComponentsLookup.componentNames;
                _matcherDoMoveType = matcher;
            }

            return _matcherDoMoveType;
        }
    }
}
