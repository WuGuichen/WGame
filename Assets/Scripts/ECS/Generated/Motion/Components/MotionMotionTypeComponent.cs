//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MotionEntity {

    public MotionTypeComponent motionType { get { return (MotionTypeComponent)GetComponent(MotionComponentsLookup.MotionType); } }
    public bool hasMotionType { get { return HasComponent(MotionComponentsLookup.MotionType); } }

    public void AddMotionType(int newMask) {
        var index = MotionComponentsLookup.MotionType;
        var component = (MotionTypeComponent)CreateComponent(index, typeof(MotionTypeComponent));
        component.mask = newMask;
        AddComponent(index, component);
    }

    public void ReplaceMotionType(int newMask) {
        var index = MotionComponentsLookup.MotionType;
        var component = (MotionTypeComponent)CreateComponent(index, typeof(MotionTypeComponent));
        component.mask = newMask;
        ReplaceComponent(index, component);
    }

    public void RemoveMotionType() {
        RemoveComponent(MotionComponentsLookup.MotionType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MotionMatcher {

    static Entitas.IMatcher<MotionEntity> _matcherMotionType;

    public static Entitas.IMatcher<MotionEntity> MotionType {
        get {
            if (_matcherMotionType == null) {
                var matcher = (Entitas.Matcher<MotionEntity>)Entitas.Matcher<MotionEntity>.AllOf(MotionComponentsLookup.MotionType);
                matcher.componentNames = MotionComponentsLookup.componentNames;
                _matcherMotionType = matcher;
            }

            return _matcherMotionType;
        }
    }
}
