//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MotionEntity {

    public DoMoveComponent doMove { get { return (DoMoveComponent)GetComponent(MotionComponentsLookup.DoMove); } }
    public bool hasDoMove { get { return HasComponent(MotionComponentsLookup.DoMove); } }

    public void AddDoMove(UnityEngine.Vector3 newTarPos) {
        var index = MotionComponentsLookup.DoMove;
        var component = (DoMoveComponent)CreateComponent(index, typeof(DoMoveComponent));
        component.tarPos = newTarPos;
        AddComponent(index, component);
    }

    public void ReplaceDoMove(UnityEngine.Vector3 newTarPos) {
        var index = MotionComponentsLookup.DoMove;
        var component = (DoMoveComponent)CreateComponent(index, typeof(DoMoveComponent));
        component.tarPos = newTarPos;
        ReplaceComponent(index, component);
    }

    public void RemoveDoMove() {
        RemoveComponent(MotionComponentsLookup.DoMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MotionMatcher {

    static Entitas.IMatcher<MotionEntity> _matcherDoMove;

    public static Entitas.IMatcher<MotionEntity> DoMove {
        get {
            if (_matcherDoMove == null) {
                var matcher = (Entitas.Matcher<MotionEntity>)Entitas.Matcher<MotionEntity>.AllOf(MotionComponentsLookup.DoMove);
                matcher.componentNames = MotionComponentsLookup.componentNames;
                _matcherDoMove = matcher;
            }

            return _matcherDoMove;
        }
    }
}
