//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MotionEntity {

    public MotionServiceComponent motionService { get { return (MotionServiceComponent)GetComponent(MotionComponentsLookup.MotionService); } }
    public bool hasMotionService { get { return HasComponent(MotionComponentsLookup.MotionService); } }

    public void AddMotionService(IMotionService newService) {
        var index = MotionComponentsLookup.MotionService;
        var component = (MotionServiceComponent)CreateComponent(index, typeof(MotionServiceComponent));
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceMotionService(IMotionService newService) {
        var index = MotionComponentsLookup.MotionService;
        var component = (MotionServiceComponent)CreateComponent(index, typeof(MotionServiceComponent));
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveMotionService() {
        RemoveComponent(MotionComponentsLookup.MotionService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MotionMatcher {

    static Entitas.IMatcher<MotionEntity> _matcherMotionService;

    public static Entitas.IMatcher<MotionEntity> MotionService {
        get {
            if (_matcherMotionService == null) {
                var matcher = (Entitas.Matcher<MotionEntity>)Entitas.Matcher<MotionEntity>.AllOf(MotionComponentsLookup.MotionService);
                matcher.componentNames = MotionComponentsLookup.componentNames;
                _matcherMotionService = matcher;
            }

            return _matcherMotionService;
        }
    }
}
