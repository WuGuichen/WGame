//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharGravityComponent charGravity { get { return (CharGravityComponent)GetComponent(GameComponentsLookup.CharGravity); } }
    public bool hasCharGravity { get { return HasComponent(GameComponentsLookup.CharGravity); } }

    public void AddCharGravity(float newValue) {
        var index = GameComponentsLookup.CharGravity;
        var component = (CharGravityComponent)CreateComponent(index, typeof(CharGravityComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCharGravity(float newValue) {
        var index = GameComponentsLookup.CharGravity;
        var component = (CharGravityComponent)CreateComponent(index, typeof(CharGravityComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCharGravity() {
        RemoveComponent(GameComponentsLookup.CharGravity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharGravity;

    public static Entitas.IMatcher<GameEntity> CharGravity {
        get {
            if (_matcherCharGravity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharGravity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharGravity = matcher;
            }

            return _matcherCharGravity;
        }
    }
}
