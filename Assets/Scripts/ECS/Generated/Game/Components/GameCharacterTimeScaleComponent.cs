//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterTimeScaleComponent characterTimeScale { get { return (CharacterTimeScaleComponent)GetComponent(GameComponentsLookup.CharacterTimeScale); } }
    public bool hasCharacterTimeScale { get { return HasComponent(GameComponentsLookup.CharacterTimeScale); } }

    public void AddCharacterTimeScale(float newRate) {
        var index = GameComponentsLookup.CharacterTimeScale;
        var component = (CharacterTimeScaleComponent)CreateComponent(index, typeof(CharacterTimeScaleComponent));
        component.rate = newRate;
        AddComponent(index, component);
    }

    public void ReplaceCharacterTimeScale(float newRate) {
        var index = GameComponentsLookup.CharacterTimeScale;
        var component = (CharacterTimeScaleComponent)CreateComponent(index, typeof(CharacterTimeScaleComponent));
        component.rate = newRate;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterTimeScale() {
        RemoveComponent(GameComponentsLookup.CharacterTimeScale);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterTimeScale;

    public static Entitas.IMatcher<GameEntity> CharacterTimeScale {
        get {
            if (_matcherCharacterTimeScale == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterTimeScale);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterTimeScale = matcher;
            }

            return _matcherCharacterTimeScale;
        }
    }
}
