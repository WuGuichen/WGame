//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RotateLeftAngleComponent rotateLeftAngle { get { return (RotateLeftAngleComponent)GetComponent(GameComponentsLookup.RotateLeftAngle); } }
    public bool hasRotateLeftAngle { get { return HasComponent(GameComponentsLookup.RotateLeftAngle); } }

    public void AddRotateLeftAngle(float newAngle) {
        var index = GameComponentsLookup.RotateLeftAngle;
        var component = (RotateLeftAngleComponent)CreateComponent(index, typeof(RotateLeftAngleComponent));
        component.angle = newAngle;
        AddComponent(index, component);
    }

    public void ReplaceRotateLeftAngle(float newAngle) {
        var index = GameComponentsLookup.RotateLeftAngle;
        var component = (RotateLeftAngleComponent)CreateComponent(index, typeof(RotateLeftAngleComponent));
        component.angle = newAngle;
        ReplaceComponent(index, component);
    }

    public void RemoveRotateLeftAngle() {
        RemoveComponent(GameComponentsLookup.RotateLeftAngle);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRotateLeftAngle;

    public static Entitas.IMatcher<GameEntity> RotateLeftAngle {
        get {
            if (_matcherRotateLeftAngle == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RotateLeftAngle);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRotateLeftAngle = matcher;
            }

            return _matcherRotateLeftAngle;
        }
    }
}
