//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CameraDirectionComponent cameraDirection { get { return (CameraDirectionComponent)GetComponent(GameComponentsLookup.CameraDirection); } }
    public bool hasCameraDirection { get { return HasComponent(GameComponentsLookup.CameraDirection); } }

    public void AddCameraDirection(float newAngle) {
        var index = GameComponentsLookup.CameraDirection;
        var component = (CameraDirectionComponent)CreateComponent(index, typeof(CameraDirectionComponent));
        component.angle = newAngle;
        AddComponent(index, component);
    }

    public void ReplaceCameraDirection(float newAngle) {
        var index = GameComponentsLookup.CameraDirection;
        var component = (CameraDirectionComponent)CreateComponent(index, typeof(CameraDirectionComponent));
        component.angle = newAngle;
        ReplaceComponent(index, component);
    }

    public void RemoveCameraDirection() {
        RemoveComponent(GameComponentsLookup.CameraDirection);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraDirection;

    public static Entitas.IMatcher<GameEntity> CameraDirection {
        get {
            if (_matcherCameraDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraDirection = matcher;
            }

            return _matcherCameraDirection;
        }
    }
}
