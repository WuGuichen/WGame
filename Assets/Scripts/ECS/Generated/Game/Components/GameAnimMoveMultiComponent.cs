//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnimMoveMultiComponent animMoveMulti { get { return (AnimMoveMultiComponent)GetComponent(GameComponentsLookup.AnimMoveMulti); } }
    public bool hasAnimMoveMulti { get { return HasComponent(GameComponentsLookup.AnimMoveMulti); } }

    public void AddAnimMoveMulti(int newRate) {
        var index = GameComponentsLookup.AnimMoveMulti;
        var component = (AnimMoveMultiComponent)CreateComponent(index, typeof(AnimMoveMultiComponent));
        component.rate = newRate;
        AddComponent(index, component);
    }

    public void ReplaceAnimMoveMulti(int newRate) {
        var index = GameComponentsLookup.AnimMoveMulti;
        var component = (AnimMoveMultiComponent)CreateComponent(index, typeof(AnimMoveMultiComponent));
        component.rate = newRate;
        ReplaceComponent(index, component);
    }

    public void RemoveAnimMoveMulti() {
        RemoveComponent(GameComponentsLookup.AnimMoveMulti);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimMoveMulti;

    public static Entitas.IMatcher<GameEntity> AnimMoveMulti {
        get {
            if (_matcherAnimMoveMulti == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnimMoveMulti);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimMoveMulti = matcher;
            }

            return _matcherAnimMoveMulti;
        }
    }
}
