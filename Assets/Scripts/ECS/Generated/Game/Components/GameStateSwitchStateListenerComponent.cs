//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public StateSwitchStateListenerComponent stateSwitchStateListener { get { return (StateSwitchStateListenerComponent)GetComponent(GameComponentsLookup.StateSwitchStateListener); } }
    public bool hasStateSwitchStateListener { get { return HasComponent(GameComponentsLookup.StateSwitchStateListener); } }

    public void AddStateSwitchStateListener(System.Collections.Generic.List<IStateSwitchStateListener> newValue) {
        var index = GameComponentsLookup.StateSwitchStateListener;
        var component = (StateSwitchStateListenerComponent)CreateComponent(index, typeof(StateSwitchStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceStateSwitchStateListener(System.Collections.Generic.List<IStateSwitchStateListener> newValue) {
        var index = GameComponentsLookup.StateSwitchStateListener;
        var component = (StateSwitchStateListenerComponent)CreateComponent(index, typeof(StateSwitchStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveStateSwitchStateListener() {
        RemoveComponent(GameComponentsLookup.StateSwitchStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStateSwitchStateListener;

    public static Entitas.IMatcher<GameEntity> StateSwitchStateListener {
        get {
            if (_matcherStateSwitchStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StateSwitchStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStateSwitchStateListener = matcher;
            }

            return _matcherStateSwitchStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddStateSwitchStateListener(IStateSwitchStateListener value) {
        var listeners = hasStateSwitchStateListener
            ? stateSwitchStateListener.value
            : new System.Collections.Generic.List<IStateSwitchStateListener>();
        listeners.Add(value);
        ReplaceStateSwitchStateListener(listeners);
    }

    public void RemoveStateSwitchStateListener(IStateSwitchStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = stateSwitchStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveStateSwitchStateListener();
        } else {
            ReplaceStateSwitchStateListener(listeners);
        }
    }
}
