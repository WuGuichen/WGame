//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RigidbodyServiceComponent rigidbodyService { get { return (RigidbodyServiceComponent)GetComponent(GameComponentsLookup.RigidbodyService); } }
    public bool hasRigidbodyService { get { return HasComponent(GameComponentsLookup.RigidbodyService); } }

    public void AddRigidbodyService(IRigidbodyService newService) {
        var index = GameComponentsLookup.RigidbodyService;
        var component = (RigidbodyServiceComponent)CreateComponent(index, typeof(RigidbodyServiceComponent));
        component.service = newService;
        AddComponent(index, component);
    }

    public void ReplaceRigidbodyService(IRigidbodyService newService) {
        var index = GameComponentsLookup.RigidbodyService;
        var component = (RigidbodyServiceComponent)CreateComponent(index, typeof(RigidbodyServiceComponent));
        component.service = newService;
        ReplaceComponent(index, component);
    }

    public void RemoveRigidbodyService() {
        RemoveComponent(GameComponentsLookup.RigidbodyService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRigidbodyService;

    public static Entitas.IMatcher<GameEntity> RigidbodyService {
        get {
            if (_matcherRigidbodyService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RigidbodyService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRigidbodyService = matcher;
            }

            return _matcherRigidbodyService;
        }
    }
}
