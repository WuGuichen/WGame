//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FocusEntityComponent focusEntity { get { return (FocusEntityComponent)GetComponent(GameComponentsLookup.FocusEntity); } }
    public bool hasFocusEntity { get { return HasComponent(GameComponentsLookup.FocusEntity); } }

    public void AddFocusEntity(GameEntity newEntity) {
        var index = GameComponentsLookup.FocusEntity;
        var component = (FocusEntityComponent)CreateComponent(index, typeof(FocusEntityComponent));
        component.entity = newEntity;
        AddComponent(index, component);
    }

    public void ReplaceFocusEntity(GameEntity newEntity) {
        var index = GameComponentsLookup.FocusEntity;
        var component = (FocusEntityComponent)CreateComponent(index, typeof(FocusEntityComponent));
        component.entity = newEntity;
        ReplaceComponent(index, component);
    }

    public void RemoveFocusEntity() {
        RemoveComponent(GameComponentsLookup.FocusEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFocusEntity;

    public static Entitas.IMatcher<GameEntity> FocusEntity {
        get {
            if (_matcherFocusEntity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FocusEntity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFocusEntity = matcher;
            }

            return _matcherFocusEntity;
        }
    }
}
