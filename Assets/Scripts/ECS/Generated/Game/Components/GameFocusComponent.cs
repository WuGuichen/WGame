//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FocusComponent focus { get { return (FocusComponent)GetComponent(GameComponentsLookup.Focus); } }
    public bool hasFocus { get { return HasComponent(GameComponentsLookup.Focus); } }

    public void AddFocus(UnityEngine.Transform newTarget) {
        var index = GameComponentsLookup.Focus;
        var component = (FocusComponent)CreateComponent(index, typeof(FocusComponent));
        component.target = newTarget;
        AddComponent(index, component);
    }

    public void ReplaceFocus(UnityEngine.Transform newTarget) {
        var index = GameComponentsLookup.Focus;
        var component = (FocusComponent)CreateComponent(index, typeof(FocusComponent));
        component.target = newTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveFocus() {
        RemoveComponent(GameComponentsLookup.Focus);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFocus;

    public static Entitas.IMatcher<GameEntity> Focus {
        get {
            if (_matcherFocus == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Focus);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFocus = matcher;
            }

            return _matcherFocus;
        }
    }
}
