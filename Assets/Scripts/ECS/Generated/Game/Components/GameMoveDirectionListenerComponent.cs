//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MoveDirectionListenerComponent moveDirectionListener { get { return (MoveDirectionListenerComponent)GetComponent(GameComponentsLookup.MoveDirectionListener); } }
    public bool hasMoveDirectionListener { get { return HasComponent(GameComponentsLookup.MoveDirectionListener); } }

    public void AddMoveDirectionListener(System.Collections.Generic.List<IMoveDirectionListener> newValue) {
        var index = GameComponentsLookup.MoveDirectionListener;
        var component = (MoveDirectionListenerComponent)CreateComponent(index, typeof(MoveDirectionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMoveDirectionListener(System.Collections.Generic.List<IMoveDirectionListener> newValue) {
        var index = GameComponentsLookup.MoveDirectionListener;
        var component = (MoveDirectionListenerComponent)CreateComponent(index, typeof(MoveDirectionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveDirectionListener() {
        RemoveComponent(GameComponentsLookup.MoveDirectionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveDirectionListener;

    public static Entitas.IMatcher<GameEntity> MoveDirectionListener {
        get {
            if (_matcherMoveDirectionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveDirectionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveDirectionListener = matcher;
            }

            return _matcherMoveDirectionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddMoveDirectionListener(IMoveDirectionListener value) {
        var listeners = hasMoveDirectionListener
            ? moveDirectionListener.value
            : new System.Collections.Generic.List<IMoveDirectionListener>();
        listeners.Add(value);
        ReplaceMoveDirectionListener(listeners);
    }

    public void RemoveMoveDirectionListener(IMoveDirectionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = moveDirectionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMoveDirectionListener();
        } else {
            ReplaceMoveDirectionListener(listeners);
        }
    }
}
