//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int AbilitySystem = 0;
    public const int ActionCameraRotate = 1;
    public const int ActionCameraRotateListener = 2;
    public const int ActionFocus = 3;
    public const int ActionForce = 4;
    public const int ActionHit = 5;
    public const int ActionLookFwd = 6;
    public const int ActionModelRotate = 7;
    public const int ActionModelRotateListener = 8;
    public const int ActionMove = 9;
    public const int ActionThrust = 10;
    public const int ActionThrustUp = 11;
    public const int ActionThrustUpListener = 12;
    public const int AiAgent = 13;
    public const int AnimationSpeed = 14;
    public const int AnimatorService = 15;
    public const int AnimMoveMulti = 16;
    public const int AnimRotateMulti = 17;
    public const int AttackForceFwd = 18;
    public const int AttackForceRight = 19;
    public const int AttackForceUp = 20;
    public const int Attribute = 21;
    public const int Camera = 22;
    public const int CameraDirection = 23;
    public const int CameraDistance = 24;
    public const int CameraLookSpeed = 25;
    public const int CameraPivotSpeed = 26;
    public const int CameraSmoothTime = 27;
    public const int CampRed = 28;
    public const int CampWhite = 29;
    public const int CharacterInfo = 30;
    public const int CharacterSensor = 31;
    public const int CharacterState = 32;
    public const int CharacterStateService = 33;
    public const int CharacterTimeScale = 34;
    public const int CharCurSpeed = 35;
    public const int CharGravity = 36;
    public const int CharSpeedMulti = 37;
    public const int DeadState = 38;
    public const int Destroyed = 39;
    public const int DetectedCharacter = 40;
    public const int DropItemSensor = 41;
    public const int EntityID = 42;
    public const int EventMoveSpeed = 43;
    public const int FocusEntity = 44;
    public const int FocusTarget = 45;
    public const int GameViewService = 46;
    public const int GroundSensor = 47;
    public const int InputState = 48;
    public const int InstanceID = 49;
    public const int JumpForce = 50;
    public const int KeepTargetDistance = 51;
    public const int LinkAbility = 52;
    public const int LinkMotion = 53;
    public const int LinkSensor = 54;
    public const int LinkVM = 55;
    public const int LinkWeapon = 56;
    public const int LockPlanarVec = 57;
    public const int MotionDB = 58;
    public const int Moveable = 59;
    public const int MoveDirection = 60;
    public const int MovementSpeed = 61;
    public const int Moving = 62;
    public const int NetAgent = 63;
    public const int NetObject = 64;
    public const int Notice = 65;
    public const int NotMove = 66;
    public const int OnGroundState = 67;
    public const int PlanarVec = 68;
    public const int PlayerInputState = 69;
    public const int Position = 70;
    public const int RigidbodyService = 71;
    public const int RotateInFocus = 72;
    public const int RotateLeftAngle = 73;
    public const int RotationSpeed = 74;
    public const int RunningMultiRate = 75;
    public const int RunState = 76;
    public const int SignalAttack = 77;
    public const int SignalDefense = 78;
    public const int SignalJump = 79;
    public const int SignalLocalMotion = 80;
    public const int SignalState = 81;
    public const int SignalStep = 82;
    public const int SpawnPoint = 83;
    public const int StateChanged = 84;
    public const int StateSwitchState = 85;
    public const int StateSwitchStateListener = 86;
    public const int StepEndState = 87;
    public const int StepState = 88;
    public const int TargetPlanarSqrDistance = 89;
    public const int UIHeadPad = 90;
    public const int Unbalanced = 91;
    public const int WalkState = 92;
    public const int WeaponDropService = 93;
    public const int WeaponService = 94;

    public const int TotalComponents = 95;

    public static readonly string[] componentNames = {
        "AbilitySystem",
        "ActionCameraRotate",
        "ActionCameraRotateListener",
        "ActionFocus",
        "ActionForce",
        "ActionHit",
        "ActionLookFwd",
        "ActionModelRotate",
        "ActionModelRotateListener",
        "ActionMove",
        "ActionThrust",
        "ActionThrustUp",
        "ActionThrustUpListener",
        "AiAgent",
        "AnimationSpeed",
        "AnimatorService",
        "AnimMoveMulti",
        "AnimRotateMulti",
        "AttackForceFwd",
        "AttackForceRight",
        "AttackForceUp",
        "Attribute",
        "Camera",
        "CameraDirection",
        "CameraDistance",
        "CameraLookSpeed",
        "CameraPivotSpeed",
        "CameraSmoothTime",
        "CampRed",
        "CampWhite",
        "CharacterInfo",
        "CharacterSensor",
        "CharacterState",
        "CharacterStateService",
        "CharacterTimeScale",
        "CharCurSpeed",
        "CharGravity",
        "CharSpeedMulti",
        "DeadState",
        "Destroyed",
        "DetectedCharacter",
        "DropItemSensor",
        "EntityID",
        "EventMoveSpeed",
        "FocusEntity",
        "FocusTarget",
        "GameViewService",
        "GroundSensor",
        "InputState",
        "InstanceID",
        "JumpForce",
        "KeepTargetDistance",
        "LinkAbility",
        "LinkMotion",
        "LinkSensor",
        "LinkVM",
        "LinkWeapon",
        "LockPlanarVec",
        "MotionDB",
        "Moveable",
        "MoveDirection",
        "MovementSpeed",
        "Moving",
        "NetAgent",
        "NetObject",
        "Notice",
        "NotMove",
        "OnGroundState",
        "PlanarVec",
        "PlayerInputState",
        "Position",
        "RigidbodyService",
        "RotateInFocus",
        "RotateLeftAngle",
        "RotationSpeed",
        "RunningMultiRate",
        "RunState",
        "SignalAttack",
        "SignalDefense",
        "SignalJump",
        "SignalLocalMotion",
        "SignalState",
        "SignalStep",
        "SpawnPoint",
        "StateChanged",
        "StateSwitchState",
        "StateSwitchStateListener",
        "StepEndState",
        "StepState",
        "TargetPlanarSqrDistance",
        "UIHeadPad",
        "Unbalanced",
        "WalkState",
        "WeaponDropService",
        "WeaponService"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AbilitySystemComponent),
        typeof(ActionCameraRotate),
        typeof(ActionCameraRotateListenerComponent),
        typeof(ActionFocus),
        typeof(ActionForce),
        typeof(ActionHitComponent),
        typeof(ActionLookFwd),
        typeof(ActionModelRotate),
        typeof(ActionModelRotateListenerComponent),
        typeof(ActionMove),
        typeof(ActionThrust),
        typeof(ActionThrustUp),
        typeof(ActionThrustUpListenerComponent),
        typeof(AiAgentComponent),
        typeof(AnimationSpeedComponent),
        typeof(AnimatorServiceComponent),
        typeof(AnimMoveMultiComponent),
        typeof(AnimRotateMultiComponent),
        typeof(AttackForceFwdComponent),
        typeof(AttackForceRightComponent),
        typeof(AttackForceUpComponent),
        typeof(AttributeComponent),
        typeof(CameraComponent),
        typeof(CameraDirectionComponent),
        typeof(CameraDistanceComponent),
        typeof(CameraLookSpeedComponent),
        typeof(CameraPivotSpeedComponent),
        typeof(CameraSmoothTimeComponent),
        typeof(CampRedComponent),
        typeof(CampWhiteComponent),
        typeof(CharacterInfoComponent),
        typeof(CharacterSensorComponent),
        typeof(CharacterStateComponent),
        typeof(CharacterStateServiceComponent),
        typeof(CharacterTimeScaleComponent),
        typeof(CharCurSpeedComponent),
        typeof(CharGravityComponent),
        typeof(CharSpeedMultiComponent),
        typeof(DeadStateComponent),
        typeof(DestroyedComponent),
        typeof(DetectedCharacterComponent),
        typeof(DropItemSensorComponent),
        typeof(EntityIDComponent),
        typeof(EventMoveSpeedComponent),
        typeof(FocusEntityComponent),
        typeof(FocusTargetComponent),
        typeof(GameViewServiceComponent),
        typeof(GroundSensor),
        typeof(InputStateComponent),
        typeof(InstanceIDComponent),
        typeof(JumpForceComponent),
        typeof(KeepTargetDistanceComponent),
        typeof(LinkAbilityComponent),
        typeof(LinkMotionComponent),
        typeof(LinkSensor),
        typeof(LinkVM),
        typeof(LinkWeaponComponent),
        typeof(LockPlanarVec),
        typeof(MotionDBComponent),
        typeof(MoveableComponent),
        typeof(MoveDirectionComponent),
        typeof(MovementSpeedComponent),
        typeof(MovingComponent),
        typeof(NetAgentComponent),
        typeof(NetObjectComponent),
        typeof(NoticeComponent),
        typeof(NotMoveComponent),
        typeof(OnGroundStateComponent),
        typeof(PlanarVecComponent),
        typeof(PlayerInputStateComponent),
        typeof(PositionComponent),
        typeof(RigidbodyServiceComponent),
        typeof(RotateInFocusComponent),
        typeof(RotateLeftAngleComponent),
        typeof(RotationSpeedComponent),
        typeof(RunningMultiRateComponent),
        typeof(RunStateComponent),
        typeof(SignalAttack),
        typeof(SignalDefenseComponent),
        typeof(SignalJumpComponent),
        typeof(SignalLocalMotionComponent),
        typeof(SignalStateComponent),
        typeof(SignalStepComponent),
        typeof(SpawnPointComponent),
        typeof(StateChangedComponent),
        typeof(StateSwitchStateComponent),
        typeof(StateSwitchStateListenerComponent),
        typeof(StepEndStateComponent),
        typeof(StepStateComponent),
        typeof(TargetPlanarSqrDistance),
        typeof(UIHeadPadComponent),
        typeof(UnbalancedComponent),
        typeof(WalkStateComponent),
        typeof(WeaponDropServiceComponent),
        typeof(WeaponServiceComponent)
    };
}
